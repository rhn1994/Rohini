1.# Write a function called is_abecedarian that returns True if the letters in a word appear

# in alphabetical order (double letters are ok). How many abecedarian words are there? (i.e)

# "Abhor" or "Aux" or "Aadil" should return "True" Banana should return "False"



def abecedarian(list1):

    print(list1)

    for word in list1:

         if list(word)==sorted(word):

                print(word)



list1=[]

list1=input("Enter a string : ").split(" ")

abecedarian(list1)

3.# Two words are anagrams if you can rearrange the letters from one to spell the other.

# Write a function called is_anagram that takes two strings and returns True if they are anagrams.





def is_anagram(str1,str2):

    if len(str1)!=len(str2):

        return False

    else:

        if sorted(str1.lower())!=sorted(str2.lower()):

            return False

        else:

            return True



str1=input("Enter the first string : ")

str2=input("Enter the second sting : ")

anagram_check=is_anagram(str1,str2)

if anagram_check:

    print("Anagram")

else:

    print("not an Anagram")

4.# In 1939 Ernest Vincent Wright published a 50,000 word novel called Gadsby that does not contain the letter "e."

# Since "e" is the most common letter in English, that’s not easy to do. In fact, it is difficult to construct a

# solitary thought without using that most common symbol. It is slow going at first, but with caution and hours of

# training you can gradually gain facility. All right, I’ll stop now. Write a function called has_no_e that returns

# True if the given word doesn’t have the letter "e" in it.

def has_no_e(s):

    if 'e' not in s:

        return True

    else:

        return False



string=input("Enter a string : ")

check_e=has_no_e(string)

if check_e:

    print(string,"has no 'e' letter")

else:

    print(string,"has 'e' letter")
5. # Modify the above program to print only the words that have no “e” and compute the percentage of the words

# in the list have no “e.”



def has_no_e(l):

    cnt=0

    print("Words which are not having 'e' in the list")

    for i in l:

        if 'e' not in i:

           print (i)

           cnt+=1

    print("No. of words not having e  ",cnt)

    print(len(l))

    per=(cnt/len(l))*100

    print("percentage of the words in the given list have no 'e' ","%.f"%per+"%")

list1=[]

list1=input("Enter the list of words : ").split(" ")

has_no_e(list1)

6. # Write a function named using_only() that takes a word and a string of letters, and that returns True

# if the word contains only letters in the list.

# Can you make a sentence using only the letters acefhlo? Other than "Hoe alfalfa?



def using_only(word,list1):

    for i in list1:

        if i not in word:

            return False

    return True



word=input("Enter a word: ")

list1=[]

list1=input("enter a string of letters: ").split(" ")

check=using_only(word,list1)

if check:

    print(word,"contains all the letters in the list")

else:

    print(word, "not contains all the letters in the list")